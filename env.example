# Golett Gateway Environment Configuration
# Copy this file to .env and fill in your actual values

# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here

# LLM Configuration
LLM_MODEL=gpt-4o
# Alternative models: gpt-3.5-turbo, gpt-4, gpt-4-turbo

# Database Configuration (Docker defaults)
POSTGRES_CONNECTION=postgresql://golett_user:golett_password@localhost:5432/golett_db

# Vector Database Configuration
QDRANT_URL=http://localhost:6333

# Redis Configuration (optional)
REDIS_URL=redis://localhost:6379

# User Configuration
USER_ID=demo_user

# Knowledge Configuration
KNOWLEDGE_DIR=./knowledge

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=./logs/golett.log

# Development Configuration
DEBUG=false
ENVIRONMENT=development

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000

# Memory Configuration
MEMORY_RETENTION_DAYS=30
MAX_CONTEXT_LENGTH=4000
EMBEDDING_MODEL=text-embedding-ada-002

# CrewAI Configuration
CREW_VERBOSE=true
CREW_MEMORY=true

# Optional: Alternative LLM Providers
# ANTHROPIC_API_KEY=your_anthropic_key_here
# HUGGINGFACE_API_TOKEN=your_hf_token_here
# COHERE_API_KEY=your_cohere_key_here

# Optional: Monitoring and Analytics
# LANGSMITH_API_KEY=your_langsmith_key_here
# LANGSMITH_PROJECT=golett-gateway

# Security Configuration
SECRET_KEY=your_secret_key_here_change_in_production
JWT_SECRET=your_jwt_secret_here_change_in_production

# Docker Compose Profiles
# Uncomment to enable optional services
# COMPOSE_PROFILES=admin,dev 