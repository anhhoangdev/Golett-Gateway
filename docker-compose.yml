version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: golett
      POSTGRES_PASSWORD: golettpass
      POSTGRES_DB: golett_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Optional: pre-create schema with migrations
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U golett -d golett_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "6333:6333"  # REST + gRPC (HTTP/1.1)
      - "6334:6334"  # Web UI
    volumes:
      - qdrant_data:/qdrant/storage

  flyway:
    image: flyway/flyway:10-alpine
    command: -url=jdbc:postgresql://postgres/golett_db -user=golett -password=golettpass -connectRetries=60 migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      flyway:
        condition: service_completed_successfully
    environment:
      PYTHONUNBUFFERED: "1"
      # Connection strings for DAOs – update if you change credentials/ports
      POSTGRES_DSN: postgres://golett:golettpass@postgres:5432/golett_db
      QDRANT_URL: http://qdrant:6333
      # ➡️  Supply your OpenAI key via an .env file or CLI ("-e OPENAI_API_KEY=...")
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - .:/app:delegated
    command: ["python", "sample_crew.py"]

volumes:
  pgdata:
  qdrant_data: 